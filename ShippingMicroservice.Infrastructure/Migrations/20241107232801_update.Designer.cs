// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShippingMicroservice.Infrastructure.Data;

#nullable disable

namespace ShippingMicroservice.Infrastructure.Migrations
{
    [DbContext(typeof(ECommerceDbContext))]
    [Migration("20241107232801_update")]
    partial class update
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShippingMicroservice.ApplicationCore.Entities.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Region");
                });

            modelBuilder.Entity("ShippingMicroservice.ApplicationCore.Entities.Shipper", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("contactPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Contact_Person");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Shipper");
                });

            modelBuilder.Entity("ShippingMicroservice.ApplicationCore.Entities.Shipper_Region", b =>
                {
                    b.Property<int>("Region_Id")
                        .HasColumnType("int");

                    b.Property<int>("Shipper_Id")
                        .HasColumnType("int");

                    b.HasKey("Region_Id", "Shipper_Id");

                    b.HasIndex("Shipper_Id");

                    b.ToTable("Shipper_Region");
                });

            modelBuilder.Entity("ShippingMicroservice.ApplicationCore.Entities.ShippingDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("orderId")
                        .HasColumnType("int")
                        .HasColumnName("Order_Id");

                    b.Property<int>("shipperId")
                        .HasColumnType("int")
                        .HasColumnName("Shipper_Id");

                    b.Property<string>("shippingStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Shipping_Status");

                    b.Property<string>("trackingNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Tracking_Number");

                    b.HasKey("Id");

                    b.HasIndex("shipperId");

                    b.ToTable("Shipping_Details");
                });

            modelBuilder.Entity("ShippingMicroservice.ApplicationCore.Entities.Shipper_Region", b =>
                {
                    b.HasOne("ShippingMicroservice.ApplicationCore.Entities.Region", "Region")
                        .WithMany("Shipper_Regions")
                        .HasForeignKey("Region_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShippingMicroservice.ApplicationCore.Entities.Shipper", "Shipper")
                        .WithMany("Shipper_Regions")
                        .HasForeignKey("Shipper_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");

                    b.Navigation("Shipper");
                });

            modelBuilder.Entity("ShippingMicroservice.ApplicationCore.Entities.ShippingDetail", b =>
                {
                    b.HasOne("ShippingMicroservice.ApplicationCore.Entities.Shipper", null)
                        .WithMany("ShippingDetails")
                        .HasForeignKey("shipperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShippingMicroservice.ApplicationCore.Entities.Region", b =>
                {
                    b.Navigation("Shipper_Regions");
                });

            modelBuilder.Entity("ShippingMicroservice.ApplicationCore.Entities.Shipper", b =>
                {
                    b.Navigation("Shipper_Regions");

                    b.Navigation("ShippingDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
