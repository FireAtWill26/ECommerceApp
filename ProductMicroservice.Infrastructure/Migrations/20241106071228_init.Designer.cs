// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductMicroservice.Infrastructure.Data;

#nullable disable

namespace ProductMicroservice.Infrastructure.Migrations
{
    [DbContext(typeof(ECommerceDbContext))]
    [Migration("20241106071228_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductMicroservice.ApplicationCore.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Parent_Category_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Parent_Category_Id");

                    b.ToTable("Product_Category");
                });

            modelBuilder.Entity("ProductMicroservice.ApplicationCore.Entities.CategoryVariation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Category_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Variation_Name");

                    b.HasKey("Id");

                    b.HasIndex("Category_Id");

                    b.ToTable("Category_Variation");
                });

            modelBuilder.Entity("ProductMicroservice.ApplicationCore.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Product_Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ProductMicroservice.ApplicationCore.Entities.ProductVariation", b =>
                {
                    b.Property<int>("Product_Id")
                        .HasColumnType("int");

                    b.Property<int>("Variation_value_Id")
                        .HasColumnType("int");

                    b.HasKey("Product_Id", "Variation_value_Id");

                    b.HasIndex("Variation_value_Id");

                    b.ToTable("Product_variation_values", (string)null);
                });

            modelBuilder.Entity("ProductMicroservice.ApplicationCore.Entities.VariationValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("value")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("variation_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("variation_Id");

                    b.ToTable("Variation_Value");
                });

            modelBuilder.Entity("ProductMicroservice.ApplicationCore.Entities.Category", b =>
                {
                    b.HasOne("ProductMicroservice.ApplicationCore.Entities.Category", "Parent")
                        .WithMany("SubCategories")
                        .HasForeignKey("Parent_Category_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("ProductMicroservice.ApplicationCore.Entities.CategoryVariation", b =>
                {
                    b.HasOne("ProductMicroservice.ApplicationCore.Entities.Category", "Category")
                        .WithMany("Variations")
                        .HasForeignKey("Category_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ProductMicroservice.ApplicationCore.Entities.Product", b =>
                {
                    b.HasOne("ProductMicroservice.ApplicationCore.Entities.Category", null)
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductMicroservice.ApplicationCore.Entities.ProductVariation", b =>
                {
                    b.HasOne("ProductMicroservice.ApplicationCore.Entities.Product", "Product")
                        .WithMany("ProductVariations")
                        .HasForeignKey("Product_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductMicroservice.ApplicationCore.Entities.VariationValue", "Variation")
                        .WithMany("ProductVariations")
                        .HasForeignKey("Variation_value_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Variation");
                });

            modelBuilder.Entity("ProductMicroservice.ApplicationCore.Entities.VariationValue", b =>
                {
                    b.HasOne("ProductMicroservice.ApplicationCore.Entities.CategoryVariation", "Variation")
                        .WithMany("Values")
                        .HasForeignKey("variation_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Variation");
                });

            modelBuilder.Entity("ProductMicroservice.ApplicationCore.Entities.Category", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("SubCategories");

                    b.Navigation("Variations");
                });

            modelBuilder.Entity("ProductMicroservice.ApplicationCore.Entities.CategoryVariation", b =>
                {
                    b.Navigation("Values");
                });

            modelBuilder.Entity("ProductMicroservice.ApplicationCore.Entities.Product", b =>
                {
                    b.Navigation("ProductVariations");
                });

            modelBuilder.Entity("ProductMicroservice.ApplicationCore.Entities.VariationValue", b =>
                {
                    b.Navigation("ProductVariations");
                });
#pragma warning restore 612, 618
        }
    }
}
